package edu.stu.cipher.view.viewModel;

import edu.stu.cipher.model.CaesarCipher;
import edu.stu.cipher.view.MainFrame;
import edu.stu.cipher.view.ModeSelectionPanel;

public class CaesarPanel extends javax.swing.JPanel {
    private MainFrame main; // Khai báo frame chính
    private CaesarCipher cipher; // Khai báo mã hóa
    private Boolean flagsEncrypt = true; // Đặt cờ để biết mã hóa hay giải mã
    private String text = "";
    private String key = "";
    private String result = "!! Result Caesar Cipher !!";
    /**
     * Creates new form CeasarPanel
     */
    public CaesarPanel(MainFrame main) {
        this.main = main;
        cipher = new CaesarCipher();
        initComponents();
        syncEncryptDecrypt();
        txtAreaResult.setText(result);
    }
    
    public void syncEncryptDecrypt() {
        checkBoxEncrypt.setSelected(flagsEncrypt);
        checkBoxDecrypt.setSelected(!flagsEncrypt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupButton = new javax.swing.ButtonGroup();
        DSTitle00 = new javax.swing.JPanel();
        btnOption = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        titleCipher = new javax.swing.JLabel();
        DSMenu = new javax.swing.JPanel();
        checkBoxEncrypt = new javax.swing.JCheckBox();
        btnReset = new javax.swing.JButton();
        checkBoxDecrypt = new javax.swing.JCheckBox();
        btnRun = new javax.swing.JButton();
        DSMenu01 = new javax.swing.JPanel();
        lblKey = new javax.swing.JLabel();
        scrollKey = new javax.swing.JScrollPane();
        txtAreaKey = new javax.swing.JTextArea();
        DSTitle01 = new javax.swing.JPanel();
        DSTitle02 = new javax.swing.JPanel();
        DSEnterText = new javax.swing.JPanel();
        lblEnterText = new javax.swing.JLabel();
        scrollEnterText = new javax.swing.JScrollPane();
        txtAreaEnterText = new javax.swing.JTextArea();
        DSResults = new javax.swing.JPanel();
        lblResult = new javax.swing.JLabel();
        scrollResult = new javax.swing.JScrollPane();
        txtAreaResult = new javax.swing.JTextArea();
        btnSwap = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        DSTitle00.setBackground(new java.awt.Color(0, 0, 0));
        DSTitle00.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnOption.setBackground(new java.awt.Color(51, 153, 255));
        btnOption.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnOption.setForeground(new java.awt.Color(255, 255, 255));
        btnOption.setText("Options");
        btnOption.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255,255,255), 2, true));
        btnOption.setFocusPainted(false);
        btnOption.setVerifyInputWhenFocusTarget(false);
        btnOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOptionActionPerformed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(255, 51, 51));
        btnExit.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("Exit");
        btnExit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255,255,255), 2, true));
        btnExit.setFocusPainted(false);
        btnExit.setVerifyInputWhenFocusTarget(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        titleCipher.setFont(new java.awt.Font("Segoe UI Black", 1, 55)); // NOI18N
        titleCipher.setForeground(new java.awt.Color(255, 255, 255));
        titleCipher.setText("Caesar");

        javax.swing.GroupLayout DSTitle00Layout = new javax.swing.GroupLayout(DSTitle00);
        DSTitle00.setLayout(DSTitle00Layout);
        DSTitle00Layout.setHorizontalGroup(
            DSTitle00Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DSTitle00Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(titleCipher, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addGroup(DSTitle00Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOption, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        DSTitle00Layout.setVerticalGroup(
            DSTitle00Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSTitle00Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DSTitle00Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOption)
                    .addGroup(DSTitle00Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(titleCipher, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DSMenu.setBackground(new java.awt.Color(51, 51, 51));
        DSMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DSMenu.setPreferredSize(new java.awt.Dimension(329, 365));

        GroupButton.add(checkBoxEncrypt);
        checkBoxEncrypt.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        checkBoxEncrypt.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxEncrypt.setSelected(true);
        checkBoxEncrypt.setText("Encrypt");
        checkBoxEncrypt.setContentAreaFilled(false);
        checkBoxEncrypt.setFocusPainted(false);
        checkBoxEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxEncryptActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(204, 51, 255));
        btnReset.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReset.setFocusPainted(false);
        btnReset.setVerifyInputWhenFocusTarget(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        GroupButton.add(checkBoxDecrypt);
        checkBoxDecrypt.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        checkBoxDecrypt.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxDecrypt.setText("Decrypt");
        checkBoxDecrypt.setContentAreaFilled(false);
        checkBoxDecrypt.setFocusPainted(false);
        checkBoxDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxDecryptActionPerformed(evt);
            }
        });

        btnRun.setBackground(new java.awt.Color(51, 153, 255));
        btnRun.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnRun.setForeground(new java.awt.Color(255, 255, 255));
        btnRun.setText("Run");
        btnRun.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRun.setFocusPainted(false);
        btnRun.setVerifyInputWhenFocusTarget(false);
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        DSMenu01.setBackground(new java.awt.Color(0, 0, 0));

        lblKey.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lblKey.setForeground(new java.awt.Color(255, 255, 255));
        lblKey.setText(" Key (int)");

        txtAreaKey.setBackground(new java.awt.Color(204, 204, 204));
        txtAreaKey.setColumns(20);
        txtAreaKey.setFont(new java.awt.Font("Segoe UI Black", 1, 13)); // NOI18N
        txtAreaKey.setForeground(new java.awt.Color(0, 0, 0));
        txtAreaKey.setLineWrap(true);
        txtAreaKey.setRows(1);
        txtAreaKey.setTabSize(1);
        txtAreaKey.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        scrollKey.setViewportView(txtAreaKey);

        javax.swing.GroupLayout DSMenu01Layout = new javax.swing.GroupLayout(DSMenu01);
        DSMenu01.setLayout(DSMenu01Layout);
        DSMenu01Layout.setHorizontalGroup(
            DSMenu01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSMenu01Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DSMenu01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollKey, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addGroup(DSMenu01Layout.createSequentialGroup()
                        .addComponent(lblKey)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DSMenu01Layout.setVerticalGroup(
            DSMenu01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSMenu01Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblKey, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollKey, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DSMenuLayout = new javax.swing.GroupLayout(DSMenu);
        DSMenu.setLayout(DSMenuLayout);
        DSMenuLayout.setHorizontalGroup(
            DSMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DSMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DSMenu01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(DSMenuLayout.createSequentialGroup()
                        .addGroup(DSMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(checkBoxDecrypt)
                            .addComponent(checkBoxEncrypt))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(DSMenuLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        DSMenuLayout.setVerticalGroup(
            DSMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DSMenu01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxDecrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(DSMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRun)
                    .addComponent(btnReset))
                .addGap(14, 14, 14))
        );

        DSTitle01.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout DSTitle01Layout = new javax.swing.GroupLayout(DSTitle01);
        DSTitle01.setLayout(DSTitle01Layout);
        DSTitle01Layout.setHorizontalGroup(
            DSTitle01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        DSTitle01Layout.setVerticalGroup(
            DSTitle01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        DSTitle02.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout DSTitle02Layout = new javax.swing.GroupLayout(DSTitle02);
        DSTitle02.setLayout(DSTitle02Layout);
        DSTitle02Layout.setHorizontalGroup(
            DSTitle02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        DSTitle02Layout.setVerticalGroup(
            DSTitle02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        DSEnterText.setBackground(new java.awt.Color(51, 51, 51));

        lblEnterText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblEnterText.setForeground(new java.awt.Color(255, 255, 255));
        lblEnterText.setText("Enter Text");

        txtAreaEnterText.setBackground(new java.awt.Color(255, 255, 255));
        txtAreaEnterText.setColumns(20);
        txtAreaEnterText.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtAreaEnterText.setForeground(new java.awt.Color(0, 0, 0));
        txtAreaEnterText.setLineWrap(true);
        txtAreaEnterText.setRows(5);
        scrollEnterText.setViewportView(txtAreaEnterText);

        javax.swing.GroupLayout DSEnterTextLayout = new javax.swing.GroupLayout(DSEnterText);
        DSEnterText.setLayout(DSEnterTextLayout);
        DSEnterTextLayout.setHorizontalGroup(
            DSEnterTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSEnterTextLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DSEnterTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEnterText)
                    .addComponent(scrollEnterText, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                .addContainerGap())
        );
        DSEnterTextLayout.setVerticalGroup(
            DSEnterTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DSEnterTextLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEnterText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollEnterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        DSResults.setBackground(new java.awt.Color(51, 51, 51));
        DSResults.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0,0,0), 2, true));
        DSResults.setForeground(new java.awt.Color(102, 102, 102));

        lblResult.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblResult.setForeground(new java.awt.Color(255, 255, 255));
        lblResult.setText("Result");

        txtAreaResult.setEditable(false);
        txtAreaResult.setBackground(new java.awt.Color(255, 255, 255));
        txtAreaResult.setColumns(20);
        txtAreaResult.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtAreaResult.setForeground(new java.awt.Color(0, 0, 0));
        txtAreaResult.setLineWrap(true);
        txtAreaResult.setRows(5);
        txtAreaResult.setName(""); // NOI18N
        scrollResult.setViewportView(txtAreaResult);

        btnSwap.setBackground(new java.awt.Color(255, 255, 255));
        btnSwap.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnSwap.setForeground(new java.awt.Color(0, 0, 153));
        btnSwap.setText("Swap");
        btnSwap.setToolTipText("");
        btnSwap.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255,255,255), 2, true));
        btnSwap.setFocusPainted(false);
        btnSwap.setVerifyInputWhenFocusTarget(false);
        btnSwap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DSResultsLayout = new javax.swing.GroupLayout(DSResults);
        DSResults.setLayout(DSResultsLayout);
        DSResultsLayout.setHorizontalGroup(
            DSResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DSResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DSResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DSResultsLayout.createSequentialGroup()
                        .addComponent(lblResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSwap, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollResult))
                .addContainerGap())
        );
        DSResultsLayout.setVerticalGroup(
            DSResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DSResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DSResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblResult)
                    .addComponent(btnSwap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollResult, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(DSEnterText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DSResults, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DSMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(DSTitle01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DSTitle00, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(DSTitle02, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DSTitle00, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DSTitle01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DSTitle02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DSEnterText, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DSResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DSMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptionActionPerformed
        // TODO add your handling code here:
        main.showPanel(new ModeSelectionPanel(main));
    }//GEN-LAST:event_btnOptionActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        flagsEncrypt = true;
        text = "";
        key = "";
        result = "!! Result Caesar Cipher !!";
        syncEncryptDecrypt();
        txtAreaEnterText.setText(text);
        txtAreaKey.setText(key);
        txtAreaResult.setText(result);
    }//GEN-LAST:event_btnResetActionPerformed

    private void checkBoxDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxDecryptActionPerformed
        // TODO add your handling code here:
        flagsEncrypt = false;
    }//GEN-LAST:event_checkBoxDecryptActionPerformed

    private void checkBoxEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxEncryptActionPerformed
        // TODO add your handling code here:
        flagsEncrypt = true;
    }//GEN-LAST:event_checkBoxEncryptActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        // TODO add your handling code here:
        text = txtAreaEnterText.getText();
        key = txtAreaKey.getText();
        if ("".equals(text) || "".equals(key)) {
            result = "❌ Error: Vui long nhap day du 'TEXT' va 'KEY' !!";
        }
        else if (flagsEncrypt) {
            try {
                result = "✅" + cipher.encrypt(text, key);
            } catch (Exception e) {
                result = "❌ Error Decrypt !!";
            }
        }
        else if (!flagsEncrypt) {
            try {
                result = "✅" + cipher.decrypt(text, key);
            } catch (Exception e) {
                result = "❌ Error Decrypt !!";
            }
        }
        txtAreaResult.setText(result);
    }//GEN-LAST:event_btnRunActionPerformed

    private void btnSwapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwapActionPerformed
        // TODO add your handling code here:
        if ("".equals(text) || "".equals(key)) {
            result = "❌ Error: Khong the swap !!";
        }
        else {
            if (flagsEncrypt) {
                flagsEncrypt = false;
                try {
                text = cipher.encrypt(text, key);
                result = "!! Result Caesar Cipher !!";
                } catch (Exception e) {
                result = "❌ Error Swap Decrypt !!";
                }
            }
            else {
                flagsEncrypt = true;
                try {
                text = cipher.decrypt(text, key);
                result = "!! Result Caesar Cipher !!";
                } catch (Exception e) {
                result = "❌ Error Swap Decrypt !!";
                }
            }
        }
        syncEncryptDecrypt();
        txtAreaEnterText.setText(text);
        txtAreaResult.setText(result);
    }//GEN-LAST:event_btnSwapActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DSEnterText;
    private javax.swing.JPanel DSMenu;
    private javax.swing.JPanel DSMenu01;
    private javax.swing.JPanel DSResults;
    private javax.swing.JPanel DSTitle00;
    private javax.swing.JPanel DSTitle01;
    private javax.swing.JPanel DSTitle02;
    private javax.swing.ButtonGroup GroupButton;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnOption;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnSwap;
    private javax.swing.JCheckBox checkBoxDecrypt;
    private javax.swing.JCheckBox checkBoxEncrypt;
    private javax.swing.JLabel lblEnterText;
    private javax.swing.JLabel lblKey;
    private javax.swing.JLabel lblResult;
    private javax.swing.JScrollPane scrollEnterText;
    private javax.swing.JScrollPane scrollKey;
    private javax.swing.JScrollPane scrollResult;
    private javax.swing.JLabel titleCipher;
    private javax.swing.JTextArea txtAreaEnterText;
    private javax.swing.JTextArea txtAreaKey;
    private javax.swing.JTextArea txtAreaResult;
    // End of variables declaration//GEN-END:variables
}
